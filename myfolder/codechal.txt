using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace codechallengetwo
{
    class Program
    {
        static void Main(string[] args)
        {

            int n = Convert.ToInt32(Console.ReadLine());
            int k = 4;
            int m = 1;
            int t = 2;
            int i;
            if (n >= 1)
            {
                for (i = 1; i <= n; ++i)
                {
                    Console.Write(t+" ");
                    if (i % 3 == 0)
                    {
                        t = t - m;
                        m += 2;
                        --k;

                    }
                    else
                    {
                        t = t + k;
                        ++k;
                    }
                }
            }
            Console.ReadLine();

            
        

            

        
        
        
        
        
        
        
        
        
        }
    }
}

class Program
    {
        static void Main(string[] args)
        {
            int c;
            int n = Convert.ToInt32(Console.ReadLine());
            c = n / 2 + 1;
            int i, j;
            for (i = 0; i < n; ++i)
            {
                for (j = 0; j < n; ++j)
                {

                    if(i==0)
                        Console.Write("1 ");
                    else if((j<i&&j==c-1)||(i==n-2&&j==0)||j==c-1&&i<n-2)
                        Console.Write("1 ");
                    else if(i==n-1&&(j>0&&j<c))
                Console.Write("1 ");
                    else 
                        Console.Write("0 ");
                
                
                
                }
                Console.WriteLine();
            }












            Console.ReadLine();

            
        

            

        
        
        
        
        
        
        
        
        
        }
    }
}




Page of 
Centroid


Centroid

 

Write a program to find the centroid of an object in a 2-D grid.

 

A 2D grid is represented by values '0'(zeros) for background and by values '1'(ones) representing the object. Assume that the coordinates of the 1st point in the grid is (0,0). Assume that the 2D grid always consists of only one object surrounded by zeros as given below.

The centroid is a float value pair (xc,yc) where xc is the average of all x coordinate values of all the coordinates belonging to the object and yc is the average of all y coordinate values of all the coordinates belonging to the object. 

 

Input and Output Format:

 

Input consists of (m*n) + 2 integers.

 

The 1st 2 integers are on 2 separate lines. 

The 1st integer corresponds to m, the number of rows in the grid. 

The 2nd integer corresponds to n, the number of columns in the grid.

The next 'n' integers correspond to the values in the 1st row.

The next 'n' integers correspond to the values in the 2nd row and so on.

 

Output consists of 2 float values that correspond to the x and y coordinate of the centroid. The 2 float values are separated by a space. The float values are printed correct to 2 decimal places.

 

Sample Input:

8

8

0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 1 1 1 1 0 0
0 0 1 1 1 1 0 0
0 0 0 1 1 0 0 0
0 0 0 1 1 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0

 

Sample Output:

3.17,3.50 







code 22/01

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace challenge22
{
    class Program
    {
        static void Main(string[] args)
        {

            int r,r1;
            int i,hh,mm,flag=0;
           int []num=new int[2];
            string s = Console.ReadLine();
            string []time=s.Split(':');
           int l=s.Length;
               hh  = Convert.ToInt32(time[0]);
               mm = Convert.ToInt32(time[i]);
                
            for(i=0;i<l;++i)
            {
                if((s[i]>=48&&s[i]<=59)||s[i]==':')
                {
                }
                else
                    
                        flag=1;
            }
                       
            if (hh > 23 || mm > 59 || l > 5 || s[2] != ':' || flag == 1)
                Console.WriteLine("Invalid Input");
            else
            {
                if (hh == 23 && mm >= 31)
                    Console.WriteLine("00:00");

                else
                {
                
                
                
                }




           
            
            }

            Console.ReadLine();
        }
    }
}





Page of 
Palindrome


Palindrome

 

Clinton is asleep if and only if Clinton is attending a lecture. This is a well-known formula among Clinton's colleagues.

On a Friday afternoon, Clinton was attending Professor Pradeep's lecture. At 12:21, right before falling asleep, he was staring at the digital watch around his friend Collin's wrist. He noticed that the digits on the clock were the same when read from both directions i.e. a palindrome.

In his sleep, he started dreaming about such rare moments of the day when the time displayed on a digital clock is a palindrome. As soon as he woke up, he felt destined to write a program that finds the next such moment.

However, Clinton still hasn't mastered the skill of programming while sleeping, so your task is to help him.

Input Format

The input consists of a string in the format "HH:MM" where "HH" is from "00" to "23" and "MM" is from "00" to "59". Both "HH" and "MM" have exactly two digits.

Output Format

Output the palindromic time of day that comes soonest after the time given in the input. If the input time itself is palindromic, output the soonest palindromic time after the input time.

If the input string is not in the format “HH:MM”, then print “Invalid Input”. If the HH or MM in the input string is invalid, print “Invalid Input”

 

Sample Input 1

 12:21
Sample Output 1 
13:31
Sample Input 2

 23:59
Sample Output 2

 00:00




